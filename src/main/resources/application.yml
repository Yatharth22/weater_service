spring:
  application:
    name: weather_service
    main:
      banner-mode: off
      allow-bean-definition-overriding: true
      spring:
        profiles:
          active: native
      cloud:
        config:
          server:
            native:
              search-locations: classpath:/config
    config:
      additional-location: classpath:config.yml,classpath:application.yml

  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    mvc:
      log-request-details: ${SPRING_MVC_REQUEST_DETAILS:true}

  logging:
    level:
      root: ${APP_ROOT_LOG_LEVEL:INFO}
      org:
        springframework:
          web: ${APP_LOG_LEVEL:INFO}
        hibernate:
          SQL: DEBUG

server:
  port: ${APP_PORT:8081}

#mongo config
database:
  mongodb:
    uri: ${WEATHER_SERVICE_MONGODB_URI:mongodb://localhost:27017/weather_service}
    name: ${WEATHER_SERVICE_COLLECTION:users}

weather:
  auth:
    secret: ${WEATHER_JWT_SECRET:dice_weather_@$$!gnment}
    issuer: ${WEATHER_JWT_ISSUER:dice}
    duration: ${WEATHER_JWT_DURATION:PT3600S}
  rest:
    connect-timeout: ${WEATHER_REST_CONNECT_TIMEOUT:3000}
    read-timeout: ${WEATHER_REST_READ_TIMEOUT:5000}
  api:
    host: ${WEATHER_API_HOST:https://forecast9.p.rapidapi.com/rapidapi/forecast/}
    headers:
      x-api-host: ${WEATHER_HEADER_HOST:forecast9.p.rapidapi.com}
      x-api-key: ${WEATHER_HEADER_KEY:a97501cd06mshf513aa138eb8c70p103ea6jsn8d49c87e3bfc}